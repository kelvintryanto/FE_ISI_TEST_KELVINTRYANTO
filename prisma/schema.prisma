// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(TEAM)
  tasks     Task[]     @relation("UserTasks")
  logs      TaskLog[]  @relation("UserLogs") // ðŸ‘ˆ Tambah relasi balik
  createdAt DateTime   @default(now())
}

model Task {
  id           Int        @id @default(autoincrement())
  title        String
  description  String?
  status       Status     @default(NOT_STARTED)
  assignedTo   User?      @relation("UserTasks", fields: [assignedToId], references: [id])
  assignedToId Int?
  logs         TaskLog[]  @relation("TaskLogs") // ðŸ‘ˆ Tambah relasi balik
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model TaskLog {
  id          Int       @id @default(autoincrement())
  action      String
  description String
  task        Task      @relation("TaskLogs", fields: [taskId], references: [id]) // relasi named
  taskId      Int
  user        User?     @relation("UserLogs", fields: [userId], references: [id]) // relasi named
  userId      Int?
  createdAt   DateTime  @default(now())
}


enum Status {
  NOT_STARTED
  ON_PROGRESS
  DONE
  REJECT
}

enum Role {
  LEAD
  TEAM
}